{"version":3,"sources":["services/contacts.js","components/FormInput.jsx","components/SearchInput.jsx","components/ContactInfo.jsx","components/Notification.jsx","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","FormInput","value","handleChange","type","label","required","onChange","SearchInput","ContactInfo","name","number","handleDelete","onClick","Notification","notificationInfo","Object","keys","length","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","color","message","App","useState","persons","setPersons","setNotificationInfo","newName","setNewName","newNumber","setNewNumber","newSearchText","setSearchText","useEffect","contactService","initialContacts","displayNotification","setTimeout","handleDeleteContact","window","confirm","filteredList","filter","person","catch","error","items","lowerCaseSpacelessText","toLowerCase","replace","includes","onSubmit","e","preventDefault","result","lowerCaseSpacelessName","find","nameAlreadyExist","updatedContactInfo","returnedContact","map","concat","target","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f75dd79.chunk.js","sourcesContent":["import axios from 'axios';\r\nconst baseUrl = '/api/contacts';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst deleteContact = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, create, update, deleteContact };\r\n","import React from 'react';\r\n\r\nconst FormInput = ({ value, handleChange, type, label, required }) => {\r\n  return (\r\n    <div>\r\n      {label}\r\n      <input\r\n        value={value}\r\n        onChange={handleChange}\r\n        type={type}\r\n        required={required}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import React from 'react';\r\n\r\nconst SearchInput = ({ value, handleChange, type, label }) => {\r\n  return (\r\n    <div>\r\n      {label}\r\n      <input\r\n        value={value}\r\n        onChange={handleChange}\r\n        type={type}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React from 'react';\r\n\r\nconst ContactInfo = ({ name, number, handleDelete, id }) => {\r\n  return (\r\n    <li>\r\n      {`${name}  : ${number}`}{' '}\r\n      <button onClick={() => handleDelete(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactInfo;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ notificationInfo }) => {\r\n  const notificationStyles = {\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  if (!Object.keys(notificationInfo).length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ ...notificationStyles, color: notificationInfo.color }}>\r\n      {notificationInfo.message}\r\n    </div>\r\n  );\r\n};\r\nexport default Notification;\r\n","import React, { useState, useEffect } from 'react';\r\nimport contactService from './services/contacts';\r\nimport FormInput from './components/FormInput';\r\nimport SearchInput from './components/SearchInput';\r\nimport ContactInfo from './components/ContactInfo';\r\nimport Notification from './components/Notification';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [notificationInfo, setNotificationInfo] = useState({});\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newSearchText, setSearchText] = useState('');\r\n\r\n  useEffect(() => {\r\n    contactService.getAll().then((initialContacts) => {\r\n      setPersons(initialContacts);\r\n    });\r\n  }, []);\r\n\r\n  const handleNameChange = (e) => {\r\n    setNewName(e.target.value);\r\n  };\r\n\r\n  const handleNumberChange = (e) => {\r\n    setNewNumber(e.target.value);\r\n  };\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const displayNotification = (message, color) => {\r\n    setNotificationInfo({\r\n      ...notificationInfo,\r\n      message,\r\n      color,\r\n    });\r\n    setTimeout(() => {\r\n      setNotificationInfo({});\r\n    }, 3000);\r\n  };\r\n\r\n  const handleDeleteContact = (id) => {\r\n    if (window.confirm('Are you sure you want to delete?')) {\r\n      contactService\r\n        .deleteContact(id)\r\n        .then(() => {\r\n          const filteredList = persons.filter((person) => {\r\n            return person.id !== id;\r\n          });\r\n          setPersons(filteredList);\r\n          displayNotification('Contact deleted successfully', 'green');\r\n        })\r\n        .catch((error) => {\r\n          displayNotification('Contact already deleted from server', 'red');\r\n        });\r\n    }\r\n  };\r\n\r\n  const nameAlreadyExist = (newName) => {\r\n    const lowerCaseSpacelessName = newName.toLowerCase().replace(/ /g, '');\r\n\r\n    return persons.find(\r\n      (person) =>\r\n        lowerCaseSpacelessName === person.name.toLowerCase().replace(/ /g, '')\r\n    );\r\n  };\r\n\r\n  const addNewContact = (contact) => {\r\n    contactService.create(contact).then((returnedContact) => {\r\n      setPersons(persons.concat(returnedContact));\r\n      displayNotification('Contact added successfully', 'green');\r\n      setNewName('');\r\n      setNewNumber('');\r\n    });\r\n  };\r\n\r\n  const updateExistingContact = (id, updatedData) => {\r\n    contactService.update(id, updatedData).then((returnedContact) => {\r\n      setPersons(\r\n        persons.map((person) => (person.id !== id ? person : returnedContact))\r\n      );\r\n      displayNotification('Contact updated successfully', 'green');\r\n      setNewName('');\r\n      setNewNumber('');\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const result = nameAlreadyExist(newName);\r\n\r\n    if (result) {\r\n      if (\r\n        window.confirm(`${result.name} already exist. Replace the old number?`)\r\n      ) {\r\n        const updatedContactInfo = {\r\n          name: newName,\r\n          number: newNumber,\r\n        };\r\n        updateExistingContact(result.id, updatedContactInfo);\r\n      }\r\n    } else {\r\n      const newContact = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      addNewContact(newContact);\r\n    }\r\n  };\r\n\r\n  const items = persons.filter((person) => {\r\n    if (!newSearchText) {\r\n      return persons;\r\n    }\r\n\r\n    const lowerCaseSpacelessText = newSearchText\r\n      .toLowerCase()\r\n      .replace(/ /g, '');\r\n\r\n    return person.name\r\n      .toLowerCase()\r\n      .replace(/ /g, '')\r\n      .includes(lowerCaseSpacelessText);\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification notificationInfo={notificationInfo} />\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          value={newName}\r\n          handleChange={handleNameChange}\r\n          type={'text'}\r\n          required\r\n          label={'Name'}\r\n        />\r\n        <FormInput\r\n          value={newNumber}\r\n          handleChange={handleNumberChange}\r\n          type={'text'}\r\n          required\r\n          label={'Phone number'}\r\n        />\r\n        <div>\r\n          <button type='submit'>add</button>\r\n        </div>\r\n      </form>\r\n\r\n      <h2>Numbers</h2>\r\n      <SearchInput\r\n        label={'Search by Name:'}\r\n        value={newSearchText}\r\n        handleChange={handleSearchInputChange}\r\n        type={'text'}\r\n      />\r\n      <ul>\r\n        {items.map(({ name, number, id }) => {\r\n          return (\r\n            <ContactInfo\r\n              key={id}\r\n              name={name}\r\n              number={number}\r\n              id={id}\r\n              handleDelete={handleDeleteContact}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}